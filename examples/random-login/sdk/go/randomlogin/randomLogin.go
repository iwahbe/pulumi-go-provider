// Code generated by random-login DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package randomlogin

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RandomLogin struct {
	pulumi.CustomResourceState

	Password       pulumi.StringPtrOutput `pulumi:"Password"`
	PasswordLength pulumi.IntPtrOutput    `pulumi:"PasswordLength"`
	Username       pulumi.StringPtrOutput `pulumi:"Username"`
}

// NewRandomLogin registers a new resource with the given unique name, arguments, and options.
func NewRandomLogin(ctx *pulumi.Context,
	name string, args *RandomLoginArgs, opts ...pulumi.ResourceOption) (*RandomLogin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PasswordLength == nil {
		return nil, errors.New("invalid value for required argument 'PasswordLength'")
	}
	var resource RandomLogin
	err := ctx.RegisterResource("random-login:index:RandomLogin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRandomLogin gets an existing RandomLogin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRandomLogin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RandomLoginState, opts ...pulumi.ResourceOption) (*RandomLogin, error) {
	var resource RandomLogin
	err := ctx.ReadResource("random-login:index:RandomLogin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RandomLogin resources.
type randomLoginState struct {
}

type RandomLoginState struct {
}

func (RandomLoginState) ElementType() reflect.Type {
	return reflect.TypeOf((*randomLoginState)(nil)).Elem()
}

type randomLoginArgs struct {
	Password       *string `pulumi:"Password"`
	PasswordLength int     `pulumi:"PasswordLength"`
	Username       *string `pulumi:"Username"`
}

// The set of arguments for constructing a RandomLogin resource.
type RandomLoginArgs struct {
	Password       pulumi.StringPtrInput
	PasswordLength pulumi.IntInput
	Username       pulumi.StringPtrInput
}

func (RandomLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*randomLoginArgs)(nil)).Elem()
}

type RandomLoginInput interface {
	pulumi.Input

	ToRandomLoginOutput() RandomLoginOutput
	ToRandomLoginOutputWithContext(ctx context.Context) RandomLoginOutput
}

func (*RandomLogin) ElementType() reflect.Type {
	return reflect.TypeOf((**RandomLogin)(nil)).Elem()
}

func (i *RandomLogin) ToRandomLoginOutput() RandomLoginOutput {
	return i.ToRandomLoginOutputWithContext(context.Background())
}

func (i *RandomLogin) ToRandomLoginOutputWithContext(ctx context.Context) RandomLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RandomLoginOutput)
}

type RandomLoginOutput struct{ *pulumi.OutputState }

func (RandomLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RandomLogin)(nil)).Elem()
}

func (o RandomLoginOutput) ToRandomLoginOutput() RandomLoginOutput {
	return o
}

func (o RandomLoginOutput) ToRandomLoginOutputWithContext(ctx context.Context) RandomLoginOutput {
	return o
}

func (o RandomLoginOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o RandomLoginOutput) PasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.IntPtrOutput { return v.PasswordLength }).(pulumi.IntPtrOutput)
}

func (o RandomLoginOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RandomLogin) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RandomLoginInput)(nil)).Elem(), &RandomLogin{})
	pulumi.RegisterOutputType(RandomLoginOutput{})
}
